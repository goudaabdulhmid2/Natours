{"id":"../../node_modules/dis/lib/isNative.js","dependencies":[{"name":"D:\\Backend\\Node js\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\starter\\package.json","includedInParent":true,"mtime":1723132043339},{"name":"D:\\Backend\\Node js\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\dis\\package.json","includedInParent":true,"mtime":1723132043167},{"name":"./toString","loc":{"line":3,"column":23,"index":90},"parent":"D:\\Backend\\Node js\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\dis\\lib\\isNative.js","resolved":"D:\\Backend\\Node js\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\dis\\lib\\toString.js"}],"generated":{"js":"/** courtesy of http://davidwalsh.name/detect-native-function **/\n\nvar toString = require('./toString');\n\n// Used to resolve the decompiled source of functions\nvar fnToString = Function.prototype.toString;\n\n// Used to detect host constructors (Safari > 4; really typed array specific)\nvar reHostCtor = /^\\[object .+?Constructor\\]$/;\n\n// Compile a regexp using a common native method as a template.\n// We chose `Object#toString` because there's a good chance it is not being mucked with.\nvar reNative = RegExp('^' +\n// Coerce `Object#toString` to a string\nString(toString)\n// Escape any special regexp characters\n.replace(/[.*+?^${}()|[\\]\\/\\\\]/g, '\\\\$&')\n// Replace mentions of `toString` with `.*?` to keep the template generic.\n// Replace thing like `for ...` to support environments like Rhino which add extra info\n// such as method arity.\n.replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\nmodule.exports = function isNative(value) {\n\tvar type = typeof value;\n\treturn type == 'function'\n\t// Use `Function#toString` to bypass the value's own `toString` method\n\t// and avoid being faked out.\n\t? reNative.test(fnToString.call(value))\n\t// Fallback to a host object check because some environments will represent\n\t// things like typed arrays as DOM methods which may not conform to the\n\t// normal native pattern.\n\t: (value && type == 'object' && reHostCtor.test(toString.call(value))) || false;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/dis/lib/isNative.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"../../node_modules/dis/lib/isNative.js":"/** courtesy of http://davidwalsh.name/detect-native-function **/\n\nvar toString = require('./toString');\n\n// Used to resolve the decompiled source of functions\nvar fnToString = Function.prototype.toString;\n\n// Used to detect host constructors (Safari > 4; really typed array specific)\nvar reHostCtor = /^\\[object .+?Constructor\\]$/;\n\n// Compile a regexp using a common native method as a template.\n// We chose `Object#toString` because there's a good chance it is not being mucked with.\nvar reNative = RegExp('^' +\n// Coerce `Object#toString` to a string\nString(toString)\n// Escape any special regexp characters\n.replace(/[.*+?^${}()|[\\]\\/\\\\]/g, '\\\\$&')\n// Replace mentions of `toString` with `.*?` to keep the template generic.\n// Replace thing like `for ...` to support environments like Rhino which add extra info\n// such as method arity.\n.replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\nmodule.exports = function isNative(value) {\n\tvar type = typeof value;\n\treturn type == 'function'\n\t// Use `Function#toString` to bypass the value's own `toString` method\n\t// and avoid being faked out.\n\t? reNative.test(fnToString.call(value))\n\t// Fallback to a host object check because some environments will represent\n\t// things like typed arrays as DOM methods which may not conform to the\n\t// normal native pattern.\n\t: (value && type == 'object' && reHostCtor.test(toString.call(value))) || false;\n}"},"lineCount":34}},"error":null,"hash":"2a27ea5a3211b3027659bed94a2afb83","cacheData":{"env":{}}}