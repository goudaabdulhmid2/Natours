{"id":"../../node_modules/dis/lib/getType.js","dependencies":[{"name":"D:\\Backend\\Node js\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\starter\\package.json","includedInParent":true,"mtime":1723132043339},{"name":"D:\\Backend\\Node js\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\dis\\package.json","includedInParent":true,"mtime":1723132043167},{"name":"./toString","loc":{"line":1,"column":23,"index":23},"parent":"D:\\Backend\\Node js\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\dis\\lib\\getType.js","resolved":"D:\\Backend\\Node js\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\dis\\lib\\toString.js"}],"generated":{"js":"var toString = require('./toString');\n\n/**\n * Returns the type of the object.\n * May return any of:\n *  - arguments\n *  - array\n *  - boolean\n *  - date\n *  - error\n *  - function\n *  - html collection (depending on the browser)\n *  - null\n *  - number\n *  - object\n *  - regexp\n *  - string\n *  - undefined\n * @param  {*} obj Object to get the type of\n * @return {string}     the type\n */\nmodule.exports = function getType(obj){\n\tif(typeof obj === 'undefined'){return 'undefined';}\n\treturn toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/dis/lib/getType.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/dis/lib/getType.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"../../node_modules/dis/lib/getType.js":"var toString = require('./toString');\n\n/**\n * Returns the type of the object.\n * May return any of:\n *  - arguments\n *  - array\n *  - boolean\n *  - date\n *  - error\n *  - function\n *  - html collection (depending on the browser)\n *  - null\n *  - number\n *  - object\n *  - regexp\n *  - string\n *  - undefined\n * @param  {*} obj Object to get the type of\n * @return {string}     the type\n */\nmodule.exports = function getType(obj){\n\tif(typeof obj === 'undefined'){return 'undefined';}\n\treturn toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n};"},"lineCount":25}},"error":null,"hash":"87f118bc7ebbe6e73dfd960228116f57","cacheData":{"env":{}}}